
# Root Cloud Build: builds & deploys both backend and frontend.
# Supply _TARGET in ['be','fe','both'] (default 'both').
# Required: _PROJECT_ID. Optional: _REGION (default us-central1), _REPO (default ofc), _VITE_API_BASE for FE.
substitutions:
  _TARGET: "both"
  _PROJECT_ID: ""
  _REGION: "us-central1"
  _REPO: "ofc"
  _FE_SERVICE: "ofc-frontend"
  _BE_SERVICE: "ofc-backend"
  _VITE_API_BASE: "http://localhost:8080"

steps:
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Configure Docker Auth'
  args: ['auth','configure-docker','${_REGION}-docker.pkg.dev','-q']

# Backend buildx build & push
- name: 'gcr.io/cloud-builders/docker'
  id: 'BE buildx create'
  entrypoint: 'bash'
  args: ['-lc','docker buildx create --use >/dev/null 2>&1 || true']
  waitFor: ['-']

- name: 'gcr.io/cloud-builders/docker'
  id: 'BE build & push'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      if [ "${_TARGET}" = "be" ] || [ "${_TARGET}" = "both" ]; then
        IMAGE="${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_BE_SERVICE}:latest"
        docker buildx build --platform linux/amd64,linux/arm64           -t "${IMAGE}"           --build-arg BUILD_TIME="$(date -u +%Y-%m-%dT%H:%M:%SZ)"           be           --push
        echo "${IMAGE}" > be/.last_image
      else
        echo "Skipping backend build"
      fi

# Backend deploy
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'BE deploy'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      if [ "${_TARGET}" = "be" ] || [ "${_TARGET}" = "both" ]; then
        IMAGE="${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_BE_SERVICE}:latest"
        gcloud run deploy "${_BE_SERVICE}"           --image "${IMAGE}" --region "${_REGION}" --platform managed           --allow-unauthenticated --port 8080           --set-env-vars "SQLITE_PATH=/app/data/transactions.db"
      else
        echo "Skipping backend deploy"
      fi

# Frontend buildx build & push
- name: 'gcr.io/cloud-builders/docker'
  id: 'FE buildx create'
  entrypoint: 'bash'
  args: ['-lc','docker buildx create --use >/dev/null 2>&1 || true']

- name: 'gcr.io/cloud-builders/docker'
  id: 'FE build & push'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      if [ "${_TARGET}" = "fe" ] || [ "${_TARGET}" = "both" ]; then
        IMAGE="${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_FE_SERVICE}:latest"
        docker buildx build --platform linux/amd64,linux/arm64           -t "${IMAGE}"           --build-arg VITE_API_BASE="${_VITE_API_BASE}"           --build-arg BUILD_TIME="$(date -u +%Y-%m-%dT%H:%M:%SZ)"           fe           --push
        echo "${IMAGE}" > fe/.last_image
      else
        echo "Skipping frontend build"
      fi

# Frontend deploy
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'FE deploy'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      if [ "${_TARGET}" = "fe" ] || [ "${_TARGET}" = "both" ]; then
        IMAGE="${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_FE_SERVICE}:latest"
        gcloud run deploy "${_FE_SERVICE}"           --image "${IMAGE}" --region "${_REGION}" --platform managed           --allow-unauthenticated --port 8080
      else
        echo "Skipping frontend deploy"
      fi
